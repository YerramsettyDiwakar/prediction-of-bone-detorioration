{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8828404,"sourceType":"datasetVersion","datasetId":5311645}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-22T02:53:17.504629Z","iopub.execute_input":"2024-07-22T02:53:17.505614Z","iopub.status.idle":"2024-07-22T02:53:17.513067Z","shell.execute_reply.started":"2024-07-22T02:53:17.505580Z","shell.execute_reply":"2024-07-22T02:53:17.512004Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"/kaggle/input/e-xlr/E-xLR DATA - Sheet1.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport scipy.stats as stats\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression,SGDRegressor\nfrom sklearn.preprocessing import PolynomialFeatures,StandardScaler\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.metrics import r2_score\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import cross_validate\nfrom sklearn.preprocessing import FunctionTransformer\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import PowerTransformer\n%matplotlib inline","metadata":{"execution":{"iopub.status.busy":"2024-07-22T02:53:17.514752Z","iopub.execute_input":"2024-07-22T02:53:17.515063Z","iopub.status.idle":"2024-07-22T02:53:17.531148Z","shell.execute_reply.started":"2024-07-22T02:53:17.515036Z","shell.execute_reply":"2024-07-22T02:53:17.530026Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"df= pd.read_csv(\"/kaggle/input/e-xlr/E-xLR DATA - Sheet1.csv\")\n#df = pd.read_csv('/kaggle/input/toughness/TOUGHNESS DATA - Sheet1.csv')\n#df = pd.read_csv('/kaggle/input/m-m-ftir/M_M (FTIR) DATA - Sheet1.csv')\n#df = pd.read_csv(\"/kaggle/input/bv-tv/BV_TV DATA - Sheet1.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-07-22T02:53:17.532540Z","iopub.execute_input":"2024-07-22T02:53:17.532874Z","iopub.status.idle":"2024-07-22T02:53:17.553654Z","shell.execute_reply.started":"2024-07-22T02:53:17.532843Z","shell.execute_reply":"2024-07-22T02:53:17.552740Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-07-22T02:53:17.555755Z","iopub.execute_input":"2024-07-22T02:53:17.556070Z","iopub.status.idle":"2024-07-22T02:53:17.577304Z","shell.execute_reply.started":"2024-07-22T02:53:17.556043Z","shell.execute_reply":"2024-07-22T02:53:17.576312Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"   HbA1c  E-xLR\n0    4.2   8.40\n1    4.3   3.23\n2    4.6   2.90\n3    4.6   3.23\n4    4.7   6.90","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>HbA1c</th>\n      <th>E-xLR</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>4.2</td>\n      <td>8.40</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.3</td>\n      <td>3.23</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.6</td>\n      <td>2.90</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.6</td>\n      <td>3.23</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4.7</td>\n      <td>6.90</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"### scatter plot\nplt.scatter(df['HbA1c'],df['E-xLR'])\nplt.xlabel(\"HbA1c\")\nplt.ylabel(\"E-xLR\")","metadata":{"execution":{"iopub.status.busy":"2024-07-22T02:53:17.578604Z","iopub.execute_input":"2024-07-22T02:53:17.578910Z","iopub.status.idle":"2024-07-22T02:53:17.858507Z","shell.execute_reply.started":"2024-07-22T02:53:17.578884Z","shell.execute_reply":"2024-07-22T02:53:17.857440Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"Text(0, 0.5, 'E-xLR')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"### Independent and Dependent features\nX= df[['HbA1c']] ### Independent feaure should be data frame or 2D array.\ny=df['E-xLR'] ### This variable can be serier or 1D array","metadata":{"execution":{"iopub.status.busy":"2024-07-22T02:53:17.859875Z","iopub.execute_input":"2024-07-22T02:53:17.860191Z","iopub.status.idle":"2024-07-22T02:53:17.870415Z","shell.execute_reply.started":"2024-07-22T02:53:17.860163Z","shell.execute_reply":"2024-07-22T02:53:17.869429Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"### Train Test Split\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test= train_test_split(X,y,test_size=0.20,random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-07-22T02:53:17.871895Z","iopub.execute_input":"2024-07-22T02:53:17.872327Z","iopub.status.idle":"2024-07-22T02:53:17.885799Z","shell.execute_reply.started":"2024-07-22T02:53:17.872270Z","shell.execute_reply":"2024-07-22T02:53:17.884707Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"code","source":"#Applying Linear Regression\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error\n\nlr=LinearRegression()\nlr.fit(X_train,y_train)\ny_pred=lr.predict(X_test)\n\nmse=mean_squared_error(y_test, y_pred)\nmae=mean_absolute_error(y_test,y_pred)\nrmse=np.sqrt(mse)\nprint(mse)\nprint(mae)\nprint(rmse)\nprint('R2_score',r2_score(y_test,y_pred))","metadata":{"execution":{"iopub.status.busy":"2024-07-22T02:53:17.887625Z","iopub.execute_input":"2024-07-22T02:53:17.888011Z","iopub.status.idle":"2024-07-22T02:53:17.912164Z","shell.execute_reply.started":"2024-07-22T02:53:17.887974Z","shell.execute_reply":"2024-07-22T02:53:17.911125Z"},"trusted":true},"execution_count":10,"outputs":[{"name":"stdout","text":"3.942069658551523\n1.5732113985264236\n1.9854645951392644\nR2_score 0.12794563047761276\n","output_type":"stream"}]},{"cell_type":"code","source":"plt.plot(X_train,lr.predict(X_train),color='r')\nplt.plot(X,y,\"b.\")\nplt.xlabel(\"X\")\nplt.ylabel(\"y\")\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-22T02:53:17.913435Z","iopub.execute_input":"2024-07-22T02:53:17.913783Z","iopub.status.idle":"2024-07-22T02:53:18.141235Z","shell.execute_reply.started":"2024-07-22T02:53:17.913755Z","shell.execute_reply":"2024-07-22T02:53:18.140213Z"},"trusted":true},"execution_count":11,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"#Applying Polynomial Regession \n#degree2\n\npoly = PolynomialFeatures(degree=8)\n\nX_poly = poly.fit_transform(X_train)","metadata":{"execution":{"iopub.status.busy":"2024-07-22T02:53:18.145433Z","iopub.execute_input":"2024-07-22T02:53:18.145776Z","iopub.status.idle":"2024-07-22T02:53:18.155278Z","shell.execute_reply.started":"2024-07-22T02:53:18.145749Z","shell.execute_reply":"2024-07-22T02:53:18.154216Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"code","source":"#print(X_train[0])\n#print(X_train_trans[0])\n\nprint(\"Shape of X_train:\", X_poly.shape)\nprint(\"First few rows of X_train:\")\nprint(X_poly[:5])  # Print the first 5 rows","metadata":{"execution":{"iopub.status.busy":"2024-07-22T02:53:18.156470Z","iopub.execute_input":"2024-07-22T02:53:18.156745Z","iopub.status.idle":"2024-07-22T02:53:18.163554Z","shell.execute_reply.started":"2024-07-22T02:53:18.156721Z","shell.execute_reply":"2024-07-22T02:53:18.162610Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stdout","text":"Shape of X_train: (61, 9)\nFirst few rows of X_train:\n[[1.00000000e+00 4.92000000e+00 2.42064000e+01 1.19095488e+02\n  5.85949801e+02 2.88287302e+03 1.41837353e+04 6.97839775e+04\n  3.43337169e+05]\n [1.00000000e+00 4.80000000e+00 2.30400000e+01 1.10592000e+02\n  5.30841600e+02 2.54803968e+03 1.22305905e+04 5.87068342e+04\n  2.81792804e+05]\n [1.00000000e+00 5.70000000e+00 3.24900000e+01 1.85193000e+02\n  1.05560010e+03 6.01692057e+03 3.42964472e+04 1.95489749e+05\n  1.11429157e+06]\n [1.00000000e+00 5.40000000e+00 2.91600000e+01 1.57464000e+02\n  8.50305600e+02 4.59165024e+03 2.47949113e+04 1.33892521e+05\n  7.23019613e+05]\n [1.00000000e+00 5.50000000e+00 3.02500000e+01 1.66375000e+02\n  9.15062500e+02 5.03284375e+03 2.76806406e+04 1.52243523e+05\n  8.37339379e+05]]\n","output_type":"stream"}]},{"cell_type":"code","source":"L1=LinearRegression()\nL1.fit(X_poly,y_train)","metadata":{"execution":{"iopub.status.busy":"2024-07-22T02:53:18.164869Z","iopub.execute_input":"2024-07-22T02:53:18.165149Z","iopub.status.idle":"2024-07-22T02:53:18.186991Z","shell.execute_reply.started":"2024-07-22T02:53:18.165124Z","shell.execute_reply":"2024-07-22T02:53:18.185821Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"LinearRegression()","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"X_test_poly = poly.transform(X_test) #Also try transform itself neither fit_transform\ny_pred=L1.predict(X_test_poly)","metadata":{"execution":{"iopub.status.busy":"2024-07-22T02:53:18.188168Z","iopub.execute_input":"2024-07-22T02:53:18.188496Z","iopub.status.idle":"2024-07-22T02:53:18.194878Z","shell.execute_reply.started":"2024-07-22T02:53:18.188468Z","shell.execute_reply":"2024-07-22T02:53:18.193784Z"},"trusted":true},"execution_count":15,"outputs":[]},{"cell_type":"code","source":"#POLYNOMIAL METRICS\nmse=mean_squared_error(y_test, y_pred)\nmae=mean_absolute_error(y_test,y_pred)\nrmse=np.sqrt(mse)\nprint(mse)\nprint(mae)\nprint(rmse)\nprint(r2_score(y_test,y_pred))\nprint('R2_score',r2_score(y_test,y_pred))","metadata":{"execution":{"iopub.status.busy":"2024-07-22T02:53:18.196059Z","iopub.execute_input":"2024-07-22T02:53:18.196453Z","iopub.status.idle":"2024-07-22T02:53:18.208033Z","shell.execute_reply.started":"2024-07-22T02:53:18.196423Z","shell.execute_reply":"2024-07-22T02:53:18.206784Z"},"trusted":true},"execution_count":16,"outputs":[{"name":"stdout","text":"4.7227193983905424\n1.6899356689758864\n2.173181860404357\n-0.04474766914897832\nR2_score -0.04474766914897832\n","output_type":"stream"}]},{"cell_type":"code","source":"plt.scatter(X_test,y_pred,label='Model',color='red')\nplt.scatter(X_train,y_train,label='data',marker='+',color='green')\n\n#plt.scatter(X,y,label='Training data')\nplt.legend()\nplt.xlabel(\"X\")\nplt.ylabel(\"y\")\n\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-22T02:53:18.209555Z","iopub.execute_input":"2024-07-22T02:53:18.209893Z","iopub.status.idle":"2024-07-22T02:53:18.457347Z","shell.execute_reply.started":"2024-07-22T02:53:18.209860Z","shell.execute_reply":"2024-07-22T02:53:18.456397Z"},"trusted":true},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# Hyperparameter","metadata":{}},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.pipeline import Pipeline\nimport matplotlib.pyplot as plt\n\n# Load data\ndf = pd.read_csv(\"/kaggle/input/e-xlr/E-xLR DATA - Sheet1.csv\")\n\n# Independent and Dependent features\nX = df[['HbA1c']]  # Independent feature should be data frame or 2D array.\ny = df['E-xLR']  # This variable can be series or 1D array\n\n# Train Test Split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=56)\n\n# Create a pipeline with PolynomialFeatures and LinearRegression\npipeline = Pipeline([\n    ('poly', PolynomialFeatures()),\n    ('linear', LinearRegression())\n])\n\n# Define the parameter grid for hyperparameter tuning\nparam_grid = {\n    'poly__degree': [2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]\n}\n\n# Create a GridSearchCV object\ngrid_search = GridSearchCV(pipeline, param_grid, cv=5, scoring='neg_mean_squared_error')\n\n# Fit the model\ngrid_search.fit(X_train, y_train)\n\n# Get the best parameters\nbest_params = grid_search.best_params_\nprint(\"Best parameters found: \", best_params)\n\n# Predict with the best model\nbest_model = grid_search.best_estimator_\ny_pred = best_model.predict(X_test)\n\n# Evaluate the model\nmse = mean_squared_error(y_test, y_pred)\nmae = mean_absolute_error(y_test, y_pred)\nrmse = np.sqrt(mse)\nr2 = -(r2_score(y_test, y_pred))\n\nprint(\"MSE: \", mse)\nprint(\"MAE: \", mae)\nprint(\"RMSE: \", rmse)\nprint('R2_score: ', r2)\n\n# Plot the results\nplt.plot(X_test, y_pred, label='Model', color='red')\nplt.scatter(X_train, y_train, label='Data', marker='+', color='green')\nplt.legend()\nplt.xlabel(\"HbA1c\")\nplt.ylabel(\"E-xLR\")\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-07-22T02:53:18.458784Z","iopub.execute_input":"2024-07-22T02:53:18.459127Z","iopub.status.idle":"2024-07-22T02:53:20.173346Z","shell.execute_reply.started":"2024-07-22T02:53:18.459100Z","shell.execute_reply":"2024-07-22T02:53:20.172185Z"},"trusted":true},"execution_count":18,"outputs":[{"name":"stdout","text":"Best parameters found:  {'poly__degree': 3}\nMSE:  5.537014821638232\nMAE:  1.4293345044557273\nRMSE:  2.353086233362099\nR2_score:  -0.14619931780348017\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n\n# Predict with the best model\nbest_model = grid_search.best_estimator_\ny_train_pred = best_model.predict(X_train)\ny_test_pred = best_model.predict(X_test)\n\n# Evaluate the model on the training set\ntrain_mse = mean_squared_error(y_train, y_train_pred)\ntrain_mae = mean_absolute_error(y_train, y_train_pred)\ntrain_rmse = np.sqrt(train_mse)\ntrain_r2 = r2_score(y_train, y_train_pred)\n\nprint(\"Training MSE: \", train_mse)\nprint(\"Training MAE: \", train_mae)\nprint(\"Training RMSE: \", train_rmse)\nprint('Training R2_score: ', train_r2)\n\n# Evaluate the model on the testing set\ntest_mse = mean_squared_error(y_test, y_test_pred)\ntest_mae = mean_absolute_error(y_test, y_test_pred)\ntest_rmse = np.sqrt(test_mse)\ntest_r2 = r2_score(y_test, y_test_pred)\n\n\n# Plot the results\nplt.figure(figsize=(6, 5))\nplt.scatter(X_train, y_train, label='Training Data', color='green', marker='+')\nplt.plot(X_train, y_train_pred, label='Model (Training)', color='red', linewidth=2)\n\nplt.legend()\nplt.xlabel(\"HbA1c\")\nplt.ylabel(\"E-xLR\")\nplt.title(\"Polynomial Regression Model\")\nplt.show()\n\n\n","metadata":{"execution":{"iopub.status.busy":"2024-07-22T02:53:20.174398Z","iopub.execute_input":"2024-07-22T02:53:20.174691Z","iopub.status.idle":"2024-07-22T02:53:20.409614Z","shell.execute_reply.started":"2024-07-22T02:53:20.174665Z","shell.execute_reply":"2024-07-22T02:53:20.408581Z"},"trusted":true},"execution_count":19,"outputs":[{"name":"stdout","text":"Training MSE:  3.38194699032251\nTraining MAE:  1.3855389045493067\nTraining RMSE:  1.8390070664145122\nTraining R2_score:  0.06925400524710812\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 600x500 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"print(\"Testing MSE: \", test_mse)\nprint(\"Testing MAE: \", test_mae)\nprint(\"Testing RMSE: \", test_rmse)\nprint('Testing R2_score: ', test_r2)\n\nplt.scatter(X_test, y_test, label='Testing Data', color='blue', marker='x')\nplt.plot(X_test, y_test_pred, label='Model (Testing)', color='orange', linewidth=2, linestyle='--')\nplt.legend()\nplt.xlabel(\"HbA1c\")\nplt.ylabel(\"E-xLR\")\nplt.title(\"Polynomial Regression Model\")\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-22T02:53:20.411223Z","iopub.execute_input":"2024-07-22T02:53:20.411624Z","iopub.status.idle":"2024-07-22T02:53:20.680912Z","shell.execute_reply.started":"2024-07-22T02:53:20.411589Z","shell.execute_reply":"2024-07-22T02:53:20.679787Z"},"trusted":true},"execution_count":20,"outputs":[{"name":"stdout","text":"Testing MSE:  5.537014821638232\nTesting MAE:  1.4293345044557273\nTesting RMSE:  2.353086233362099\nTesting R2_score:  0.14619931780348017\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# Random Values ","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error, r2_score\n\n\n# Function to evaluate polynomial regression model performance\ndef evaluate_model(random_state, degree):\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=random_state)\n    \n    # Applying Polynomial Features\n    poly = PolynomialFeatures(degree=degree)\n    X_train_poly = poly.fit_transform(X_train)\n    X_test_poly = poly.transform(X_test)\n    \n    # Applying Linear Regression on Polynomial Features\n    lr = LinearRegression()\n    lr.fit(X_train_poly, y_train)\n    y_pred_train = lr.predict(X_train_poly)\n    y_pred_test = lr.predict(X_test_poly)\n    \n    mse_train = mean_squared_error(y_train, y_pred_train)\n    mse_test = mean_squared_error(y_test, y_pred_test)\n    r2_train = r2_score(y_train, y_pred_train)\n    r2_test = r2_score(y_test, y_pred_test)\n    \n    return random_state, degree, mse_train, mse_test, r2_train, r2_test\n\n# Iterate over different random_state and degree values\nresults = []\ndegrees = [2,3,4,5,6,7,8]\n  # List of degrees to try\nfor random_state in range(300):\n    for degree in degrees:\n        results.append(evaluate_model(random_state, degree))\n\n# Convert results to DataFrame\nresults_df = pd.DataFrame(results, columns=['random_state', 'degree', 'mse_train', 'mse_test', 'r2_train', 'r2_test'])\n\n# Find the best random_state and degree values based on Test MSE\nbest_results = results_df.nsmallest(50, 'mse_test')\n\n# Print the training and testing MSE with respect to the best random_state and degree values\nprint(\"Best random_state and degree values based on Test MSE:\")\nfor index, row in best_results.iterrows():\n    print(f\"Random State: {row['random_state']}, Degree: {row['degree']}\")\n    print(f\"Training MSE: {row['mse_train']:.4f}, Testing MSE: {row['mse_test']:.4f}\")\n    print(f\"Training R2: {row['r2_train']:.4f}, Testing R2: {row['r2_test']:.4f}\")\n    print(\"---\")\n","metadata":{"execution":{"iopub.status.busy":"2024-07-22T02:54:33.615938Z","iopub.execute_input":"2024-07-22T02:54:33.616328Z","iopub.status.idle":"2024-07-22T02:54:47.249646Z","shell.execute_reply.started":"2024-07-22T02:54:33.616295Z","shell.execute_reply":"2024-07-22T02:54:47.248654Z"},"trusted":true},"execution_count":23,"outputs":[{"name":"stdout","text":"Best random_state and degree values based on Test MSE:\nRandom State: 107.0, Degree: 6.0\nTraining MSE: 4.4400, Testing MSE: 1.0057\nTraining R2: 0.1062, Testing R2: 0.2713\n---\nRandom State: 146.0, Degree: 2.0\nTraining MSE: 4.5884, Testing MSE: 1.0447\nTraining R2: 0.0759, Testing R2: -0.1091\n---\nRandom State: 146.0, Degree: 3.0\nTraining MSE: 4.5011, Testing MSE: 1.1113\nTraining R2: 0.0935, Testing R2: -0.1799\n---\nRandom State: 107.0, Degree: 4.0\nTraining MSE: 4.4458, Testing MSE: 1.1443\nTraining R2: 0.1050, Testing R2: 0.1708\n---\nRandom State: 107.0, Degree: 2.0\nTraining MSE: 4.5631, Testing MSE: 1.1513\nTraining R2: 0.0814, Testing R2: 0.1657\n---\nRandom State: 107.0, Degree: 5.0\nTraining MSE: 4.4453, Testing MSE: 1.1856\nTraining R2: 0.1051, Testing R2: 0.1409\n---\nRandom State: 119.0, Degree: 8.0\nTraining MSE: 4.3076, Testing MSE: 1.2472\nTraining R2: 0.1486, Testing R2: -0.0697\n---\nRandom State: 107.0, Degree: 3.0\nTraining MSE: 4.4540, Testing MSE: 1.2525\nTraining R2: 0.1033, Testing R2: 0.0924\n---\nRandom State: 119.0, Degree: 7.0\nTraining MSE: 4.3637, Testing MSE: 1.2632\nTraining R2: 0.1375, Testing R2: -0.0834\n---\nRandom State: 119.0, Degree: 2.0\nTraining MSE: 4.5349, Testing MSE: 1.2776\nTraining R2: 0.1036, Testing R2: -0.0958\n---\nRandom State: 119.0, Degree: 3.0\nTraining MSE: 4.4446, Testing MSE: 1.2848\nTraining R2: 0.1215, Testing R2: -0.1020\n---\nRandom State: 146.0, Degree: 6.0\nTraining MSE: 4.3999, Testing MSE: 1.2919\nTraining R2: 0.1139, Testing R2: -0.3716\n---\nRandom State: 146.0, Degree: 4.0\nTraining MSE: 4.4250, Testing MSE: 1.2939\nTraining R2: 0.1089, Testing R2: -0.3737\n---\nRandom State: 119.0, Degree: 6.0\nTraining MSE: 4.3677, Testing MSE: 1.3141\nTraining R2: 0.1367, Testing R2: -0.1271\n---\nRandom State: 66.0, Degree: 2.0\nTraining MSE: 4.5153, Testing MSE: 1.3311\nTraining R2: 0.0919, Testing R2: -0.0153\n---\nRandom State: 119.0, Degree: 4.0\nTraining MSE: 4.3860, Testing MSE: 1.3546\nTraining R2: 0.1331, Testing R2: -0.1618\n---\nRandom State: 119.0, Degree: 5.0\nTraining MSE: 4.3749, Testing MSE: 1.3678\nTraining R2: 0.1353, Testing R2: -0.1731\n---\nRandom State: 146.0, Degree: 5.0\nTraining MSE: 4.4075, Testing MSE: 1.3693\nTraining R2: 0.1124, Testing R2: -0.4537\n---\nRandom State: 146.0, Degree: 8.0\nTraining MSE: 4.3288, Testing MSE: 1.3959\nTraining R2: 0.1282, Testing R2: -0.4820\n---\nRandom State: 75.0, Degree: 6.0\nTraining MSE: 4.3815, Testing MSE: 1.4186\nTraining R2: 0.1206, Testing R2: -0.3062\n---\nRandom State: 131.0, Degree: 3.0\nTraining MSE: 4.3957, Testing MSE: 1.4337\nTraining R2: 0.1163, Testing R2: 0.0861\n---\nRandom State: 131.0, Degree: 2.0\nTraining MSE: 4.4794, Testing MSE: 1.4369\nTraining R2: 0.0994, Testing R2: 0.0841\n---\nRandom State: 82.0, Degree: 2.0\nTraining MSE: 4.4979, Testing MSE: 1.4470\nTraining R2: 0.1162, Testing R2: -0.3506\n---\nRandom State: 131.0, Degree: 6.0\nTraining MSE: 4.3186, Testing MSE: 1.4476\nTraining R2: 0.1318, Testing R2: 0.0773\n---\nRandom State: 82.0, Degree: 3.0\nTraining MSE: 4.4068, Testing MSE: 1.4509\nTraining R2: 0.1341, Testing R2: -0.3543\n---\nRandom State: 131.0, Degree: 7.0\nTraining MSE: 4.2932, Testing MSE: 1.4682\nTraining R2: 0.1369, Testing R2: 0.0642\n---\nRandom State: 131.0, Degree: 4.0\nTraining MSE: 4.3452, Testing MSE: 1.4722\nTraining R2: 0.1264, Testing R2: 0.0616\n---\nRandom State: 131.0, Degree: 8.0\nTraining MSE: 4.2357, Testing MSE: 1.4754\nTraining R2: 0.1484, Testing R2: 0.0596\n---\nRandom State: 126.0, Degree: 8.0\nTraining MSE: 4.2731, Testing MSE: 1.4770\nTraining R2: 0.1491, Testing R2: -0.7456\n---\nRandom State: 83.0, Degree: 4.0\nTraining MSE: 4.3670, Testing MSE: 1.4828\nTraining R2: 0.1240, Testing R2: -0.6132\n---\nRandom State: 131.0, Degree: 5.0\nTraining MSE: 4.3337, Testing MSE: 1.4880\nTraining R2: 0.1287, Testing R2: 0.0516\n---\nRandom State: 83.0, Degree: 5.0\nTraining MSE: 4.3564, Testing MSE: 1.4899\nTraining R2: 0.1261, Testing R2: -0.6210\n---\nRandom State: 82.0, Degree: 4.0\nTraining MSE: 4.3602, Testing MSE: 1.4984\nTraining R2: 0.1433, Testing R2: -0.3986\n---\nRandom State: 15.0, Degree: 8.0\nTraining MSE: 4.2486, Testing MSE: 1.5000\nTraining R2: 0.1383, Testing R2: 0.0765\n---\nRandom State: 11.0, Degree: 2.0\nTraining MSE: 4.4691, Testing MSE: 1.5013\nTraining R2: 0.0894, Testing R2: 0.0982\n---\nRandom State: 82.0, Degree: 6.0\nTraining MSE: 4.3315, Testing MSE: 1.5076\nTraining R2: 0.1489, Testing R2: -0.4072\n---\nRandom State: 83.0, Degree: 8.0\nTraining MSE: 4.2504, Testing MSE: 1.5094\nTraining R2: 0.1474, Testing R2: -0.6422\n---\nRandom State: 75.0, Degree: 5.0\nTraining MSE: 4.3820, Testing MSE: 1.5118\nTraining R2: 0.1205, Testing R2: -0.3921\n---\nRandom State: 83.0, Degree: 6.0\nTraining MSE: 4.3302, Testing MSE: 1.5144\nTraining R2: 0.1314, Testing R2: -0.6476\n---\nRandom State: 83.0, Degree: 3.0\nTraining MSE: 4.3984, Testing MSE: 1.5246\nTraining R2: 0.1177, Testing R2: -0.6587\n---\nRandom State: 83.0, Degree: 7.0\nTraining MSE: 4.3013, Testing MSE: 1.5624\nTraining R2: 0.1372, Testing R2: -0.6998\n---\nRandom State: 126.0, Degree: 4.0\nTraining MSE: 4.3528, Testing MSE: 1.5765\nTraining R2: 0.1333, Testing R2: -0.8631\n---\nRandom State: 126.0, Degree: 2.0\nTraining MSE: 4.4891, Testing MSE: 1.5795\nTraining R2: 0.1061, Testing R2: -0.8667\n---\nRandom State: 123.0, Degree: 4.0\nTraining MSE: 4.3521, Testing MSE: 1.5886\nTraining R2: 0.0654, Testing R2: 0.3712\n---\nRandom State: 75.0, Degree: 4.0\nTraining MSE: 4.3873, Testing MSE: 1.5911\nTraining R2: 0.1194, Testing R2: -0.4651\n---\nRandom State: 126.0, Degree: 7.0\nTraining MSE: 4.3044, Testing MSE: 1.5912\nTraining R2: 0.1429, Testing R2: -0.8805\n---\nRandom State: 82.0, Degree: 5.0\nTraining MSE: 4.3341, Testing MSE: 1.5921\nTraining R2: 0.1484, Testing R2: -0.4861\n---\nRandom State: 211.0, Degree: 7.0\nTraining MSE: 4.2783, Testing MSE: 1.5927\nTraining R2: 0.1368, Testing R2: -0.0292\n---\nRandom State: 146.0, Degree: 7.0\nTraining MSE: 4.3502, Testing MSE: 1.5970\nTraining R2: 0.1239, Testing R2: -0.6955\n---\nRandom State: 15.0, Degree: 2.0\nTraining MSE: 4.4425, Testing MSE: 1.6033\nTraining R2: 0.0989, Testing R2: 0.0129\n---\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Hyperparameter Tuning ","metadata":{}},{"cell_type":"code","source":"'''import numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures\n\ndf = pd.read_csv('/kaggle/input/e-xlr/E-xLR DATA - Sheet1.csv')\n\n### Independent and Dependent features\nX= df[['HbA1c']] ### Independent feaure should be data frame or 2D array.\ny=df['E-xLR'] ### This variable can be serier or 1D array\n\n### Train Test Split\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test= train_test_split(X,y,test_size=0.25,random_state=42)\n\nparameters= {\n        'Degree': [2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]\n}\n\n###LinearRegression \npoly = PolynomialFeatures()\ngrid_search = GridSearchCV(poly, parameters, cv=5)  # 5-fold cross-validation\ngrid_search.fit(X, y)\nbest_params = grid_search.best_params_\nprint(\"Best hyperparameters:\", best_params)'''\n","metadata":{"execution":{"iopub.status.busy":"2024-07-22T02:53:25.264547Z","iopub.execute_input":"2024-07-22T02:53:25.264887Z","iopub.status.idle":"2024-07-22T02:53:25.272504Z","shell.execute_reply.started":"2024-07-22T02:53:25.264860Z","shell.execute_reply":"2024-07-22T02:53:25.271285Z"},"trusted":true},"execution_count":22,"outputs":[{"execution_count":22,"output_type":"execute_result","data":{"text/plain":"'import numpy as np\\nimport pandas as pd\\nfrom sklearn.model_selection import cross_val_score\\nfrom sklearn.model_selection import GridSearchCV\\nfrom sklearn.linear_model import LinearRegression\\nfrom sklearn.preprocessing import PolynomialFeatures\\n\\ndf = pd.read_csv(\\'/kaggle/input/e-xlr/E-xLR DATA - Sheet1.csv\\')\\n\\n### Independent and Dependent features\\nX= df[[\\'HbA1c\\']] ### Independent feaure should be data frame or 2D array.\\ny=df[\\'E-xLR\\'] ### This variable can be serier or 1D array\\n\\n### Train Test Split\\nfrom sklearn.model_selection import train_test_split\\nX_train,X_test,y_train,y_test= train_test_split(X,y,test_size=0.25,random_state=42)\\n\\nparameters= {\\n        \\'Degree\\': [2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]\\n}\\n\\n###LinearRegression \\npoly = PolynomialFeatures()\\ngrid_search = GridSearchCV(poly, parameters, cv=5)  # 5-fold cross-validation\\ngrid_search.fit(X, y)\\nbest_params = grid_search.best_params_\\nprint(\"Best hyperparameters:\", best_params)'"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]}]}